spring.datasource.url=jdbc:postgresql://localhost:5432/desafio-zup-api-rest?createDatabaseIfNotExist=true
spring.datasource.username=postgres
spring.datasource.password=admin
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.hibernate.ddl-auto=update
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQL9Dialect
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defalults=false
# Show or not log for each sql query
spring.jpa.show-sql = true
server.port=8081

feign.httpclient.hc5.enabled=true
feign.autoconfiguration.jackson.enabled=true
feign.httpclient.enabled=true
feign.encoder.charset-from-content-type=true
# Ddl auto must be set to "create" to ensure that Hibernate will run the
# import.sql file at application startup
#spring.jpa.hibernate.ddl-auto = create

# Naming strategy
#spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQL9Dialect

# ===============================
# = HIBERNATE SEARCH
# ===============================

# Spring Data JPA will take any properties under spring.jpa.properties.* and 
# pass them along (with the prefix stripped) once the EntityManagerFactory is 
# created.

# Specify the DirectoryProvider to use (the Lucene Directory)
spring.jpa.properties.hibernate.search.default.directory_provider = filesystem

# Using the filesystem DirectoryProvider you also have to specify the default
# base directory for all indexes (make sure that the application have write
# permissions on such directory)
spring.jpa.properties.hibernate.search.default.indexBase = /var/netgloo_blog/lucene/indexes/